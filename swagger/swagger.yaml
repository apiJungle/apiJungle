swagger: '2.0'
info:
  version: 0.0.1
  title: 'APIJungle.com API'
host: api.apijungle.com
basePath: /v1
schemes:
  - http
  - https
produces:
  - application/json
consumes:
  - application/json
paths:
  /schemas:
    x-swagger-router-controller: schemas
    get:
      description: Return a list of schema objects
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Schema'
    post:
      description: Persist a schema object
      responses:
        '201':
          description: successful operation
    parameters:
      - name: schema
        in: body
        required: true
        schema:
          $ref: '#/definitions/Schema'
  /schemas/{schemaId}:
    x-swagger-router-controller: schemas
    parameters:
      - name: schemaId
        in: path
        description: ID of schema to fetch
        required: true
        type: string
        format: uuid
    get:
      operationId: getSchemaById
      description: Retrieve a single schema definition
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Schema'
    put:
      description: Modify an existing schema definition
      responses:
        '200':
          description: successful operation
    delete:
      description: Delete an existing schema definition
      responses:
        '200':
          description: successful operation
  /users:
    get:
      description: Return a list of users
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
  /users/{userId}/schemas:
    parameters:
      - name: userId
        in: path
        description: ID of user to fetch
        required: true
        type: string
        format: uuid
    get:
      description: |
        Return a list of schema definitions uploaded by the authenticated user
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Schema'
  /user:
    get:
      description: Return the user profile of the authenticated user
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
  /search:
    parameters:
      - name: type
        in: query
        description: The type of object
        required: true
        type: string
        format: uuid
    get:
      description: Search schemas and users
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Search'
definitions:
  Api:
    type: object
    properties:
      id: 
        type: string
        format: uuid
      title: 
        type: string
      schemas:
        type: array
        items:
          $ref: '#/definitions/Schema'
  Schema:
    type: object
    properties:
      id:
        type: string
        format: uuid
      schema:
        type: object
      createdAt:
        type: string
        format: date-time
      lastEdited:
        type: string
        format: date-time
  User:
    type: object
    properties:
      id:
        type: string
        format: uuid
      username:
        type: string
      firstName: 
        type: string
      lastName: 
        type: string
      email: 
        type: string
      password: 
        type: string
      createdAt:
        type: string
        format: date-time
      lastEdited:
        type: string
        format: date-time
  Search:
    type: object
    properties:
      users:
        type: array
        items:
          $ref: '#/definitions/User'
      apis:
        type: array
        items:
          $ref: '#/definitions/Api'
      schemas:
        type: array
        items:
          $ref: '#/definitions/Schema'